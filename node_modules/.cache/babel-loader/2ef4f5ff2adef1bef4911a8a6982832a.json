{"ast":null,"code":"var _jsxFileName = \"/Users/skyezhang/Downloads/reactproject/src/components/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport \"./Expenses.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [currentOption, setcurrentOption] = useState(\"2020\");\n\n  const filterChangeHandler = selectedYear => {\n    setcurrentOption(selectedYear);\n  }; //filter or map function will return a new array and not change the\n  // the original array, coz \n\n\n  const filterExpense = props.items.filter(pramters => {\n    return pramters.date.getFullYear().toString == currentOption;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n      selected: currentOption,\n      ChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), props.items.map(pramters => {\n      //render items\n      return /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: pramters.title,\n        amount: pramters.amount,\n        date: pramters.date\n      }, pramters.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expenses, \"7M7QkFbrqX3+5sBqH2k0kQi+jW0=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/skyezhang/Downloads/reactproject/src/components/Expenses.js"],"names":["React","useState","ExpenseItem","ExpenseFilter","Expenses","props","currentOption","setcurrentOption","filterChangeHandler","selectedYear","filterExpense","items","filter","pramters","date","getFullYear","toString","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,gBAAP;;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,MAAD,CAAlD;;AACA,QAAMO,mBAAmB,GAAIC,YAAD,IAAkB;AAC5CF,IAAAA,gBAAgB,CAACE,YAAD,CAAhB;AACD,GAFD,CAFuB,CAKvB;AACA;;;AACA,QAAMC,aAAa,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAoBC,QAAD,IAAc;AACrD,WAAOA,QAAQ,CAACC,IAAT,CAAcC,WAAd,GAA4BC,QAA5B,IAAwCV,aAA/C;AACD,GAFqB,CAAtB;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE,QAAC,aAAD;AACE,MAAA,QAAQ,EAAEA,aADZ;AAEE,MAAA,YAAY,EAAEE;AAFhB;AAAA;AAAA;AAAA;AAAA,YADF,EAMGH,KAAK,CAACM,KAAN,CAAYM,GAAZ,CAAiBJ,QAAD,IAAc;AAC7B;AACA,0BACE,QAAC,WAAD;AAEE,QAAA,KAAK,EAAEA,QAAQ,CAACK,KAFlB;AAGE,QAAA,MAAM,EAAEL,QAAQ,CAACM,MAHnB;AAIE,QAAA,IAAI,EAAEN,QAAQ,CAACC;AAJjB,SACOD,QAAQ,CAACO,EADhB;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KAVA,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA9BQhB,Q;;KAAAA,Q;AA+BT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport \"./Expenses.css\";\nfunction Expenses(props) {\n  const [currentOption, setcurrentOption] = useState(\"2020\");\n  const filterChangeHandler = (selectedYear) => {\n    setcurrentOption(selectedYear);\n  };\n  //filter or map function will return a new array and not change the\n  // the original array, coz \n  const filterExpense = props.items.filter((pramters) => {\n    return pramters.date.getFullYear().toString == currentOption;\n  });\n  return (\n    <div className='expenses'>\n      <ExpenseFilter\n        selected={currentOption}\n        ChangeFilter={filterChangeHandler}\n      />\n\n      {props.items.map((pramters) => {\n        //render items\n        return (\n          <ExpenseItem\n            key={pramters.id}\n            title={pramters.title}\n            amount={pramters.amount}\n            date={pramters.date}\n          />\n        );\n      })}\n    </div>\n  );\n}\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}